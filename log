Wed 22 Mar 2023 02:12:17 AM UTC: 
 tests:  0|6
total_score: 0/70
a1148d7
Wed 22 Mar 2023 02:17:02 AM UTC: 
 list.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)
test.c: In function ‘createList’:
test.c:448:5: error: ‘main’ is normally a non-static function [-Werror=main]
  448 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:468:1: error: expected declaration or statement at end of input
  468 | }
      | ^
test.c:468: error: control reaches end of non-void function [-Werror=return-type]
  468 | }
      | 
At top level:
test.c:448:5: error: ‘main’ defined but not used [-Werror=unused-function]
  448 | int main( int argc, char *argv[] ) {
      |     ^~~~
In file included from test.c:5:
list.c:80:6: error: ‘cleanList’ defined but not used [-Werror=unused-function]
   80 | void cleanList(List * list) {
      |      ^~~~~~~~~
list.c:71:8: error: ‘popBack’ defined but not used [-Werror=unused-function]
   71 | void * popBack(List * list) {
      |        ^~~~~~~
list.c:58:6: error: ‘pushBack’ defined but not used [-Werror=unused-function]
   58 | void pushBack(List * list, void * data) {
      |      ^~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
f2a793e
Wed 22 Mar 2023 02:18:22 AM UTC: 
 list.c | 1 -
 1 file changed, 1 deletion(-)
 tests:  1|5
total_score: 10/70
c1b7d0c
Wed 22 Mar 2023 02:22:01 AM UTC: 
 list.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)
In file included from test.c:5:
list.c:31:1: error: expected identifier or ‘(’ before numeric constant
   31 | 2. Programe las funciones `void * firstList(List * list)` y `void * nextList(List * list)`.
      | ^~
list.c:31:27: error: stray ‘`’ in program
   31 | 2. Programe las funciones `void * firstList(List * list)` y `void * nextList(List * list)`.
      |                           ^
list.c:31:57: error: stray ‘`’ in program
   31 | 2. Programe las funciones `void * firstList(List * list)` y `void * nextList(List * list)`.
      |                                                         ^
list.c:31:61: error: stray ‘`’ in program
   31 | 2. Programe las funciones `void * firstList(List * list)` y `void * nextList(List * list)`.
      |                                                             ^
list.c:31:90: error: stray ‘`’ in program
   31 | 2. Programe las funciones `void * firstList(List * list)` y `void * nextList(List * list)`.
      |                                                                                          ^
list.c:32:62: error: stray ‘`’ in program
   32 |    * La primera retorna el dato del primer nodo de la lista (`head`) y actualiza el current para que apunte a ese nodo.
      |                                                              ^
list.c:32:67: error: stray ‘`’ in program
   32 |    * La primera retorna el dato del primer nodo de la lista (`head`) y actualiza el current para que apunte a ese nodo.
      |                                                                   ^
Compilation failed
ce7f170
Wed 22 Mar 2023 02:23:12 AM UTC: 
 list.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)
In file included from test.c:5:
list.c: In function ‘nextList’:
list.c:45:23: error: ‘List’ {aka ‘struct List’} has no member named ‘next’
   45 |   list->current = list->next;
      |                       ^~
Compilation failed
8029b80
Wed 22 Mar 2023 02:23:36 AM UTC: 
 list.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
7374f03
Wed 22 Mar 2023 11:17:19 AM UTC: 
 list.c | 2 ++
 1 file changed, 2 insertions(+)
In file included from test.c:5:
list.c: In function ‘firstList’:
list.c:40:8: error: expected ‘(’ before ‘list’
   40 |     if list==NULL return NULL;
      |        ^~~~
      |        (
list.c:40:8: error: statement with no effect [-Werror=unused-value]
   40 |     if list==NULL return NULL;
      |        ^~~~
list.c: In function ‘nextList’:
list.c:46:6: error: expected ‘(’ before ‘list’
   46 |   if list==NULL return NULL;
      |      ^~~~
      |      (
list.c:46:6: error: statement with no effect [-Werror=unused-value]
   46 |   if list==NULL return NULL;
      |      ^~~~
cc1: all warnings being treated as errors
Compilation failed
198e014
Wed 22 Mar 2023 11:17:38 AM UTC: 
 list.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
 tests:  0|0
f3321d0
Wed 22 Mar 2023 11:18:01 AM UTC: 
 list.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
 tests:  0|0
e43c836
Wed 22 Mar 2023 11:20:10 AM UTC: 
 list.c | 2 ++
 1 file changed, 2 insertions(+)
 tests:  5|4
total_score: 25/70
a8a0a6e
Thu 23 Mar 2023 12:43:21 AM UTC: 
 list.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)
 tests:  0|0
08a4ccf
Thu 23 Mar 2023 12:44:05 AM UTC: 
 list.c | 4 ++++
 1 file changed, 4 insertions(+)
 tests:  9|3
total_score: 35/70
5e227a8
Thu 23 Mar 2023 12:50:10 AM UTC: 
 list.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)
In file included from test.c:5:
list.c: In function ‘pushFront’:
list.c:68:4: error: ‘Nodo’ undeclared (first use in this function); did you mean ‘Node’?
   68 |   *Nodo nuevo = createNode(data);
      |    ^~~~
      |    Node
list.c:68:4: note: each undeclared identifier is reported only once for each function it appears in
list.c:68:8: error: expected ‘;’ before ‘nuevo’
   68 |   *Nodo nuevo = createNode(data);
      |        ^~~~~~
      |        ;
list.c:71:18: error: ‘nuevo’ undeclared (first use in this function)
   71 |     list->head = nuevo;
      |                  ^~~~~
Compilation failed
a456810
Thu 23 Mar 2023 12:50:21 AM UTC: 
 list.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
list.c: In function ‘pushFront’:
list.c:68:4: error: expected expression before ‘Node’
   68 |   *Node nuevo = createNode(data);
      |    ^~~~
list.c:71:18: error: ‘nuevo’ undeclared (first use in this function)
   71 |     list->head = nuevo;
      |                  ^~~~~
list.c:71:18: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
8290b19
Thu 23 Mar 2023 12:50:41 AM UTC: 
 list.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  9|3
total_score: 35/70
9487898
Thu 23 Mar 2023 12:54:26 AM UTC: 
 list.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)
In file included from test.c:5:
list.c:83:1: error: expected identifier or ‘(’ before numeric constant
   83 | 5. Programe la función `void pushCurrent(List * list, void* data)`, la cual agrega un dato a continuación del nodo apuntado por `list->current`.
      | ^~
list.c:83:25: error: stray ‘`’ in program
   83 | 5. Programe la función `void pushCurrent(List * list, void* data)`, la cual agrega un dato a continuación del nodo apuntado por `list->current`.
      |                        ^
list.c:83:67: error: stray ‘`’ in program
   83 | 5. Programe la función `void pushCurrent(List * list, void* data)`, la cual agrega un dato a continuación del nodo apuntado por `list->current`.
      |                                                                  ^
In file included from test.c:5:
list.c:83:131: error: stray ‘`’ in program
   83 | 5. Programe la función `void pushCurrent(List * list, void* data)`, la cual agrega un dato a continuación del nodo apuntado por `list->current`.
      |                                                                                                                                 ^
list.c:83:145: error: stray ‘`’ in program
   83 | 5. Programe la función `void pushCurrent(List * list, void* data)`, la cual agrega un dato a continuación del nodo apuntado por `list->current`.
      |                                                                                                                                               ^
Compilation failed
c6c50d1
Thu 23 Mar 2023 12:54:54 AM UTC: 
 list.c | 1 -
 1 file changed, 1 deletion(-)
 tests:  10|2
total_score: 45/70
6b92af3
Thu 23 Mar 2023 01:03:25 AM UTC: 
 list.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)
In file included from test.c:5:
list.c:109:1: error: expected identifier or ‘(’ before numeric constant
  109 | 6. Programe la función `void* popCurrent(List * list)`, la cual elimina el nodo que está en la posición del current de la lista enlazada, y además retorna el **dato** del nodo eliminado.
      | ^~
list.c:109:25: error: stray ‘`’ in program
  109 | 6. Programe la función `void* popCurrent(List * list)`, la cual elimina el nodo que está en la posición del current de la lista enlazada, y además retorna el **dato** del nodo eliminado.
      |                        ^
list.c:109:55: error: stray ‘`’ in program
  109 | 6. Programe la función `void* popCurrent(List * list)`, la cual elimina el nodo que está en la posición del current de la lista enlazada, y además retorna el **dato** del nodo eliminado.
      |                                                      ^
In file included from test.c:5:
list.c:112:15: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |               ^
list.c:112:24: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                        ^
list.c:112:27: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                           ^
list.c:112:36: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                    ^
list.c:112:40: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                        ^
list.c:112:48: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                ^
list.c:112:79: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                                               ^
list.c:112:90: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                                                          ^
list.c:112:94: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                                                              ^
list.c:112:106: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                                                                          ^
list.c: In function ‘popCurrent’:
list.c:122:10: error: statement with no effect [-Werror=unused-value]
  122 |     dato == list->current->data;
      |     ~~~~~^~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
757a76a
Thu 23 Mar 2023 01:03:40 AM UTC: 
 list.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
list.c:109:1: error: expected identifier or ‘(’ before numeric constant
  109 | 6. Programe la función `void* popCurrent(List * list)`, la cual elimina el nodo que está en la posición del current de la lista enlazada, y además retorna el **dato** del nodo eliminado.
      | ^~
list.c:109:25: error: stray ‘`’ in program
  109 | 6. Programe la función `void* popCurrent(List * list)`, la cual elimina el nodo que está en la posición del current de la lista enlazada, y además retorna el **dato** del nodo eliminado.
      |                        ^
list.c:109:55: error: stray ‘`’ in program
  109 | 6. Programe la función `void* popCurrent(List * list)`, la cual elimina el nodo que está en la posición del current de la lista enlazada, y además retorna el **dato** del nodo eliminado.
      |                                                      ^
In file included from test.c:5:
list.c:112:15: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |               ^
list.c:112:24: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                        ^
list.c:112:27: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                           ^
list.c:112:36: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                    ^
list.c:112:40: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                        ^
list.c:112:48: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                ^
list.c:112:79: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                                               ^
list.c:112:90: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                                                          ^
list.c:112:94: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                                                              ^
list.c:112:106: error: stray ‘`’ in program
  112 | Las funciones `pushBack`, `popFront` y `popBack` se pueden implementar usando `popCurrent` y `pushCurrent` (búsquelas en el código).
      |                                                                                                          ^
Compilation failed
f12492a
Thu 23 Mar 2023 01:03:53 AM UTC: 
 list.c | 5 -----
 1 file changed, 5 deletions(-)
 tests:  0|0
aaaa110
Thu 23 Mar 2023 01:06:09 AM UTC: 
 list.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 tests:  10|2
total_score: 45/70
23ce82c
